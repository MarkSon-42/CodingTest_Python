import sys
t = int(input())
isload = [][] # 사다리를 나타내는 변수 -> 이렇게 선언하는거 맞음?
for i in range(t):
    n, m, d = map(int, sys.stdin.readline().split())
    for i in range(n*2 -1):
        if isload[i] == "+" and isload[i+1] == "+" # 우측으로 가는 경우    -> 근데 이렇게 하나하나 읽는게 아니라,

        elif isload[i] == "+" and isload[i-1] == "+" # 좌측으로 가는 경우


        else:    # 그냥 직선으로 내려가는 경우
            dest = dest + (2*n-1) # 가리키는 위치에서 아래로 한칸 이동 ( 이 식이 맞나 ? )



        for j in range(m):

# 사다리를 2차원 벡터로 만들어야 할듯 -> 파이썬으로 2차원 벡터를 다뤄본 경험이 매우 적다

# 제한 시간이랑 메모리를 보니까 복잡도를 크게 고려할 필요는 없는듯

# 거의 못푼다고 가정하면 대체 무엇을 모르는지 한땀한땀 적어서 48시간 이내에 다 풀이해야 한다.

# 1. 백준의 2469와 비슷한 문제인거 같다. (많이 다른 문제인듯..)

# 2. 오히려 잘 된것이 캡스톤 하나만 하면 좀 취준에 프로젝트 부족의 느낌이 강했는데, 실프를 개인 프로젝트의 최상위 목표로 삼으면 된다

# 3. 실프 1 라이브 풀이가 가능한 레벨까지 3개월안에 잡는 것을 지라 스프린트로 넣으면 될듯.

# 4. 일단 위처럼 입출력 받는게 조금 어색하다. 이번기회에 다잡을 것

# 5. 그리고 사다리를 입력받는것을 현재 해당 코드에 구현해야 하는 것인지?

# 6. 초기에 입력받는 + 를 1,2,3,4,5,6으로 바꿔줘야 할까?

# 7. 정말 그냥 구현문제인데.. 말그대로 구현이슈가 있다. 별찍기도 꽤많이 까먹었는데 별찍기부터 다시 반복문연습으로 해야할듯

# 8. 일단 초기의 목표(~03.24 2주가량)는 2시간이 주어졌을때, 최대한 구현을 시도할 수 있는 수준 _ 구현 지식에 너무 많은 부족함이 있다거나 하지 않는 상황

# 9. 파이썬 알고리즘 인터뷰만큼 좋은 컨텐츠가 없으니.. 일단 이걸

# 10. 그리고 유튜브 파이썬 알고리즘 풀이 _ 프로그래머스 말고 약간 튜토리얼 + 중급내용의 컨텐츠 있는지 찾아볼 것

# 11. 그리고 해당 문제는 삼성sw아카데미 유사문제인것 같다.

# 12. 백준 15684가 기초버전의 문제인 것 같다.

# 13. list(), map(), split()등등 기본적인 내장함수조차 용법을 거의 모른다는 점..

# 14. 그리고 가장 기초적인 반복문과 조건문도 정말 완벽하게 백지에다가 설명할 수 없다. 특히 반복문을 그냥 감으로만 알고있는데.. 갈수록 매우 한계를 느끼는 중

# 15. git push error는 빨리 좀 해결하자.. 이런걸로 시간을 잡아먹는 순간이 있어서는 안된다...

# 16. SWEA일단 가입해두자. 문제가 여기서 나오느...

# 17. 독해 훈련 해야됨. 국어 지문 읽는것 처럼 문제 이해하는게 중요 특히 평소에 텍스트 읽을떄 속독한다시피 훑으면 정말 망함. 국어지문을 속독으로 풀 수 없듯이 꾹꾹이로 눌러읽어야

# 18. 